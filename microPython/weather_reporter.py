# TODO:更大的天气图标、在固件里添加中文字库

import usocket
import ujson
from ssd1306 import SSD1306_I2C
from machine import I2C, Pin
import gc

i2c = I2C(scl=Pin(5), sda=Pin(4), freq=400000)
oled = SSD1306_I2C(128, 64, i2c)

# 16*16像素的天气图标
weather = {
    # 大雪
    b'\xe5\xa4\xa7\xe9\x9b\xaa': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x00, 0x10, 0x28, 0x10, 0x01,
                                  0x02, 0x01,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x10, 0x28, 0x10, 0x00, 0x00,
                                  0x80, 0x00],
    # 中雪
    b'\xe4\xb8\xad\xe9\x9b\xaa': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x00, 0x04, 0x0A, 0x04, 0x00,
                                  0x00, 0x00,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x40, 0xA0,
                                  0x40, 0x00],
    # 小雪
    b'\xe5\xb0\x8f\xe9\x9b\xaa': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x00, 0x01, 0x02, 0x01, 0x00,
                                  0x00, 0x00,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x80, 0x00, 0x00,
                                  0x00, 0x00],
    # 雷阵雨
    b'\xe9\x9b\xb7\xe9\x98\xb5\xe9\x9b\xa8': [0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x10, 0x20, 0x11, 0x22,
                                              0x01, 0x00, 0x01, 0x02,
                                              0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC4, 0x08, 0x84, 0x08, 0x00,
                                              0x00, 0x80, 0x00, 0x00],
    # 大雨
    b'\xe5\xa4\xa7\xe9\x9b\xa8': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x08, 0x08, 0x09, 0x09, 0x01,
                                  0x01, 0x00,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x20, 0x20, 0x20,
                                  0x00, 0x00],
    # 中雨
    b'\xe4\xb8\xad\xe9\x9b\xa8': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x08, 0x08, 0x08, 0x08, 0x00,
                                  0x00, 0x00,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x20, 0x20, 0x20,
                                  0x00, 0x00],
    # 小雨
    b'\xe5\xb0\x8f\xe9\x9b\xa8': [0x00, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x00, 0x01, 0x01, 0x01, 0x00,
                                  0x00, 0x00,
                                  0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                                  0x00, 0x00],
    # 晴
    b'\xe6\x99\xb4': [0x81, 0x41, 0x20, 0x07, 0x08, 0x10, 0x10, 0xD0, 0x10, 0x10, 0x08, 0x07, 0x20, 0x41, 0x81, 0x00,
                      0x02, 0x04, 0x08, 0xC0, 0x20, 0x10, 0x10, 0x16, 0x10, 0x10, 0x20, 0xC0, 0x08, 0x04, 0x02, 0x00],
    # 多云
    b'\xe5\xa4\x9a\xe4\xba\x91': [0x81, 0x41, 0x20, 0x07, 0x08, 0x10, 0xD0, 0x10, 0x17, 0x1F, 0x3F, 0x7F, 0x3F, 0x07,
                                  0x00, 0x00,
                                  0x02, 0x04, 0x08, 0xC0, 0x20, 0x10, 0x16, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFC,
                                  0xF0, 0x00],
    # 阴
    b'\xe9\x98\xb4': [0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x1F, 0x7F, 0xFF, 0xFF, 0x7F, 0x0F, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x1C, 0x1C, 0xC0, 0xE0, 0xFC, 0xFC, 0xFE, 0xFE, 0xF8, 0xC0, 0x30, 0x00, 0x00],
    'none': [0x00, 0x3F, 0x02, 0x02, 0x02, 0x02, 0x7F, 0x04, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80,
             0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x80, 0x84, 0x84, 0x7C, 0x00]
}


def http_get_json(url):
    string = ''
    _, _, host, path = url.split('/', 3)
    addr = usocket.getaddrinfo(host, 80)[0][-1]
    s = usocket.socket()
    s.connect(addr)
    s.send(bytes('GET /%s HTTP/1.0\r\nHost: %s\r\n\r\n' % (path, host), 'utf8'))
    while True:
        data = s.recv(100)
        if data:
            string = string + str(data, 'utf8')
        else:
            break
    s.close()
    t = string.split("\r\n")[-1]

    return t


def minus_time():
    f = open('data.json', 'r', encoding='utf-8')
    a = ujson.load(f)
    o_time = a['time'].split(' ')[1].split(':')
    o_h = int(o_time[0])
    o_m = int(o_time[1])
    o_s = int(o_time[2])
    f.close()

    time_string = http_get_json('http://quan.suning.com/getSysTime.do')
    b = ujson.loads(time_string)['sysTime2']

    n_time = b.split(" ")[1].split(":")
    n_h = int(n_time[0])
    n_m = int(n_time[1])
    n_s = int(n_time[2])

    ans = 60 * 60 * (n_h - o_h) + 60 * (n_m - o_m) + (n_s - o_s)
    return ans


def show_pic(weather_type):
    def get_bit_val(dbyte, index):
        if dbyte & (1 << (7 - index)):
            return 1
        else:
            return 0

    for y in range(0, 16):
        for x in range(0, 8):
            flag = get_bit_val(weather[weather_type][y], int(x))
            if flag:
                oled.pixel(x, y, flag)
        for x in range(0, 8):
            flagg = get_bit_val(weather[weather_type][16 + y], int(x))
            if flagg:
                oled.pixel(x + 8, y, flagg)
    oled.show()


def main():
    flag = minus_time()
    if 0 <= flag <= 14400:  # less than 4h until last update
        # 显示上一次存储的ujson文件
        oled.text("Last Update:", 0, 48)

        with open('data.json', 'r') as f:
            data = ujson.load(f)
        oled.text(data['time'], 0, 57)
        oled.show()
        a = data['data']['forecast'][0]['type'].encode('utf-8')
        try:
            keyword = weather[a]
            show_pic(keyword)
            # 显示温度范围，显示风向风力，显示天气类型
        except KeyError:
            show_pic('none')
        finally:
            return
    else:
        # 更新天气数据并更新json文件
        s = http_get_json("http://t.weather.itboy.net/api/weather/city/101221201")
        with open('data.json', 'w', encoding='utf-8') as f:
            f.writelines(s)
        main()
        return


gc.collect()
main()
